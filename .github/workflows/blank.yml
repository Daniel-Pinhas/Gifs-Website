name: Your GitHub Action Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  your_job_name:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Clean Up & Clone
      run: |
        sudo rm -rf *
        git clone https://github.com/Daniel-Pinhas/DevOps-Projects.git
        echo 'Clean Up & Clone Stage Completed'

    - name: Build and Push Flask-1 Image
      run: |
        cd DevOps-Projects/Pipeline-Terraform/Flask-Project/
        chmod +x manageVersion.py
        python3 manageVersion.py
      echo: 'Build and Push Flask-1 Image Stage Completed'

    - name: Build and Push Flask-2 Image
      run: |
        cd DevOps-Projects/Pipeline-Terraform/Flask-Project2/
        chmod +x manageVersion.py
        python3 manageVersion.py
      echo: 'Build and Push Flask-2 Image Stage Completed'

    - name: Build and Push Flask-3 Image
      run: |
        cd DevOps-Projects/Pipeline-Terraform/Flask-Project3/
        chmod +x manageVersion.py
        python3 manageVersion.py
      echo: 'Build and Push Flask-3 Image Stage Completed'

    - name: Deploy to Test Env: Rancher Desktop
      run: |
        cd DevOps-Projects/Pipeline-Terraform/flask-charts-test/
        cat abc.txt
        kubectl config use-context rancher-desktop
        python3 changeTagTest.py
        kubectl apply -f /var/lib/jenkins/.ssh/rds.yml
        kubectl apply -f httpd-deploy-test.yml
        helm upgrade --install flask-app-test . --values values.yml
      echo: 'Deploy Application into Rancher Desktop Completed'

    - name: Testing Test-Server
      run: |
        cd DevOps-Projects/Pipeline-Terraform/tests/
        bash test.sh
      echo: 'Testing Test-Server Stage Completed'

    - name: Deploy to Production Env: GCP Cluster
      run: |
        cd DevOps-Projects/Pipeline-Terraform/flask-charts-prod/
        kubectl config use-context gke_lofty-dynamics-393510_us-central1-a_gifs-website-cluster
        bash changeTagflask.sh
        kubectl apply -f /var/lib/jenkins/.ssh/rds.yml
        kubectl apply -f service-html.yml
        kubectl apply -f flask-prod.yml
        sleep 60
        bash updateHTML.sh
        kubectl apply -f httpd-deploy-prod.yml
      echo: 'Deploy Application into Production GCP Cluster Completed'

    - name: Testing Prod-Server
      run: |
        cd DevOps-Projects/Pipeline-Terraform/tests/
        bash ingressIP.sh
        bash prod.sh
      echo: 'Testing Prod-Server Stage Completed'

