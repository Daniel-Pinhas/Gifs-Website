name: Gifs-Website 

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GKE_REGION: 'europe-west1'
  PROJECT_ID: 'lofty-dynamics-393510'
  PROJECT_ID_2: 'peak-surface-398109'

jobs:
  Versioning-Images:
    name: Versioning Application Images
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@master
      - uses: fregante/setup-git-token@v1
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
      - run: >
          git config --global user.email "danielp1239@gmail.com";
          git config --global user.name "Daniel-Pinhas";

      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set environment variables
        run: >
          pip3 install docker;
          echo "RDS_CREDS=${{ secrets.RDS_CREDS }}" >> $GITHUB_ENV;
  
      - name: Git Diff for Flask-Project
        id: git-diff-flask-project
        run: >
          if git log -n1 -- App/Flask-Project/ | grep -q .; then
            echo "Commits detected in the App/Flask-Project directory."
            echo "::set-output name=skip_steps::false"
          else
            echo "No commits in the App/Flask-Project directory."
            echo "::set-output name=skip_steps::true"
          fi

      - name: Run Python script for Flask-Project
        if: steps.git-diff-flask-project.outputs.skip_steps != 'true'
        run: python3 rds.py;
        working-directory: App/Flask-Project

      - name: Build and Push Flask-1 Image for Flask-Project
        if: steps.git-diff-flask-project.outputs.skip_steps != 'true'
        run: >
          python3 manageVersion.py;
          echo 'Build and Push Flask-1 Image Stage Completed for Flask-Project'
        working-directory: App/Flask-Project

      - name: Git Diff for Flask-Project2
        id: git-diff-flask-project2
        run: >
          git checkout -B main;
          if git diff-index --quiet HEAD -- 'App/Flask-Project2/**/*'; then
            echo "No changes in the App/Flask-Project2 directory."
            echo "::set-output name=skip_steps::true"
          fi

      - name: Run Python script for Flask-Project2
        if: steps.git-diff-flask-project2.outputs.skip_steps != 'true'
        run: python3 rds.py;
        working-directory: App/Flask-Project2

      - name: Build and Push Flask-2 Image for Flask-Project2
        if: steps.git-diff-flask-project2.outputs.skip_steps != 'true'
        run: >
          python3 manageVersion.py;
          echo 'Build and Push Flask-2 Image Stage Completed for Flask-Project2'
        working-directory: App/Flask-Project2

      - name: Git Diff for Flask-Project3
        id: git-diff-flask-project3
        run: >
          git checkout -B main;
          if git diff-index --quiet HEAD -- 'App/Flask-Project3/**/*'; then
            echo "No changes in the App/Flask-Project3 directory."
            echo "::set-output name=skip_steps::true"
          fi

      - name: Run Python script for Flask-Project3
        if: steps.git-diff-flask-project3.outputs.skip_steps != 'true'
        run: python3 rds.py;
        working-directory: App/Flask-Project3

      - name: Build and Push Flask-3 Image for Flask-Project3
        if: steps.git-diff-flask-project3.outputs.skip_steps != 'true'
        run: >
          python3 manageVersion.py;
          echo 'Build and Push Flask-3 Image Stage Completed for Flask-Project3'
        working-directory: App/Flask-Project3

  GKE-Setup-Testing-Cluster:
    name: Setup the GKE-Testing-Cluster
    needs: [Versioning-Images]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: "gifs-website-cluster-test"
      GKE_REGION: "europe-west1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup GCloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL_2 }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-test"
            location: "europe-west1"
          
      - name: Install Dependencies
        run: >
          sudo apt install jq -y;
          sudo pip3 install docker;
          sudo pip3 install PyYAML;
          pip3 install google-cloud-storage;
        working-directory: charts-test
          
      - name:  Set environment variables
        run: echo "RDS_CREDS=${{ secrets.RDS_CREDS }}" >> $GITHUB_ENV

      - name: Run Python script
        run: python3 rds.py;
        working-directory: charts-test
          
      - name: Run changeValues.sh
        run: >
          chmod +x changeTag.py;
          python3 changeTag.py danielpinhas/flask-k8s; 
          python3 changeTag.py danielpinhas/flask2-k8s;
          python3 changeTag.py danielpinhas/flask3-k8s;
        working-directory: charts-test

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with: 
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIAL }}
          export_default_credentials: true

      - name: Read current Helm chart version
        run: >
          python3 helmVersion.py;
          cat charts-test/Chart.yaml;
          export NEW_VERSION=$(cat charts-test/Chart.yaml | grep -oP 'version:\s*\K[0-9]+\.[0-9]+\.[0-9]+');
          echo "Updated Version: $NEW_VERSION";
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV;
      
      - name: Package Helm chart
        run: >
          helm package charts-test --app-version "gifs-website-${{ env.NEW_VERSION }}" --destination .;

      - name: Push Helm chart to GCS bucket
        run: >
          gsutil cp gifs-website-${{ env.NEW_VERSION }}.tgz gs://gifs-website-charts;
        
      - name: Deploy/Upgrade to Testing Env GCP Cluster
        run: >
          helm upgrade --install gifs-website-testing . -f values.yml
        working-directory: charts-test

      - name: Run Modified ConfigMap
        run: >
          sleep 80;
          python3  updateConfig.py;
          kubectl apply -f config.yml;
        working-directory: k8s-test
        
  Test-Testing-Cluster:
    name: Testing-Cluster
    needs: [GKE-Setup-Testing-Cluster]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: "gifs-website-cluster-test"
      GKE_REGION: "europe-west1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup GCloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL_2 }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-test"
            location: "europe-west1"

      - name: Config Test Script
        run: >
          bash ingressIP-test.sh;      
        working-directory: tests   

      - name: Test-Testing-Cluster
        run: >
          bash test.sh;
        working-directory: tests

      - name: Test-Testing-Cluster
        run: >
          kubectl delete deploy --all;
          kubectl delete svc --all;
          echo Testing Test-Server Stage Completed;   
       
  GKE-Setup-Production-Cluster:
    name: Setup the GKE-Prod-Cluster
    needs: [Test-Testing-Cluster]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: "gifs-website-cluster-prod"
      GKE_REGION: "us-central1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup GCloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-prod"
            location: "us-central1"

      - name: Install Dependencies
        run: >
          sudo apt install git -y;
      
      - uses: actions/checkout@master
      - uses: fregante/setup-git-token@v1
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
      - run: >
          git config --global user.email "danielp1239@gmail.com";
          git config --global user.name "Daniel-Pinhas";
          git clone https://github.com/Daniel-Pinhas/Gifs-Website-CD.git;

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ env.PROJECT_ID_2 }}
          service_account_key: ${{ secrets.GCP_CREDENTIAL }}
          export_default_credentials: true

      - name: Untar Latest Helm Version
        run: >
          LATEST_CHART=$(gsutil ls gs://gifs-website-charts | grep -o 'gifs-website-[0-9.]*.tgz' | sort -V | tail -n 1);
          gsutil cp gs://gifs-website-charts/${LATEST_CHART} .;
          tar xvzf ${LATEST_CHART};
          mkdir helm-chart;
          mv gifs-website/values.yml gifs-website/Chart.yaml gifs-website/templates/ helm-chart/;
          mv helm-chart/values.yml helm-chart/values.yaml;

      - name: Modify Values
        run: >
          python3 valuesDel.py; 
          mv -f helm-chart/values.yaml helm-chart/Chart.yaml Gifs-Website-CD/Chart/;

      - name: Add Commit & Push
        run: >
          git checkout -B main;
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit."
          else
            git add .;
            git commit -m "Update Helm chart to version ${{ env.NEW_VERSION }}";
            git push origin main;
          fi
        working-directory: Gifs-Website-CD

      - name: Setup GCloud CLI 2#
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-prod"
            location: "us-central1"

      - name: Run Modified ConfigMap
        run: >
          sleep 80;
          python3 updateConfig.py;
          mv config.yml config.yaml;
          mv -f config.yaml ../Gifs-Website-CD/Chart/templates/;
        working-directory: k8s-prod

      - name: Add Commit & Push
        run: >
          git checkout -B main;
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit."
          else
            git add .;
            git commit -m "Update config.yaml";
            git push origin main || exit 1;
          fi
        working-directory: Gifs-Website-CD/Chart/
       
  Test-Production-Server:
    name: Testing Prod-Server
    needs: [GKE-Setup-Production-Cluster]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: "gifs-website-cluster-prod"
      GKE_REGION: "us-central1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup GCloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-prod"
            location: "us-central1"
      - name: Config Test Script
        run: >
          sleep 60;
          bash ingressIP-prod.sh;      
        working-directory: tests 

      - name: Test Production Server
        run: >
          bash prod.sh;
          echo 'Testing Prod-Server Stage Completed';
        working-directory: tests