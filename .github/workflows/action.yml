name: Gifs-Website 

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  GKE_REGION: 'europe-west1'
  PROJECT_ID: 'lofty-dynamics-393510'

jobs:
  Versioning-Images:
    name: Versioning Application Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set environment variables
        run: echo "RDS_CREDS=${{ secrets.RDS_CREDS }}" >> $GITHUB_ENV

      - name: Run Python script
        run: python3 rds.py;
        working-directory: App/Flask-Project

      - name: Build and Push Flask-1 Image   
        run: >
          pip3 install docker;
          python3 manageVersion.py;
          echo 'Build and Push Flask-1 Image Stage Completed'
        working-directory: App/Flask-Project

      - name: Run Python script
        run: python3 rds.py;
        working-directory: App/Flask-Project2

      - name: Build and Push Flask-2 Image
        run: >
          python3 manageVersion.py;
          echo 'Build and Push Flask-2 Image Stage Completed'
        working-directory: App/Flask-Project2

      - name: Run Python script
        run: python3 rds.py;
        working-directory: App/Flask-Project3

      - name: Build and Push Flask-3 Image
        run: >
          python3 manageVersion.py;
          echo 'Build and Push Flask-3 Image Stage Completed'
        working-directory: App/Flask-Project3

  GKE-Setup-Testing-Cluster:
    name: Setup the GKE-Testing-Cluster
    needs: [Versioning-Images]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: "gifs-website-cluster-test"
      GKE_REGION: "europe-west1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup GCloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-test"
            location: "europe-west1"
          
      - name: Install Dependencies
        run: >
          sudo apt install jq -y;
          sudo pip3 install docker;
          sudo pip3 install PyYAML
        working-directory: charts-test
          
      - name:  Set environment variables
        run: echo "RDS_CREDS=${{ secrets.RDS_CREDS }}" >> $GITHUB_ENV

      - name: Run Python script
        run: python3 rds.py;
        working-directory: charts-test
          
      - name: Run changeValues.sh
        run: >
          chmod +x changeTag.py;
          python3 changeTag.py danielpinhas/flask-k8s; 
          python3 changeTag.py danielpinhas/flask2-k8s;
          python3 changeTag.py danielpinhas/flask3-k8s;
        working-directory: charts-test
        
      - name: Read current Helm chart version
        run: >
          python3 helmVersion.py;
          cat charts-test/Chart.yaml;
          export NEW_VERSION=$(cat charts-test/Chart.yaml | grep -oP 'version:\s*\K[0-9]+\.[0-9]+\.[0-9]+');
          echo "Updated Version: $NEW_VERSION";
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV;
      
      - name: Package Helm chart
        run: >
          helm package charts-test --app-version "gifs-website-${{ env.NEW_VERSION }}" --destination .;
      
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIAL }}
          export_default_credentials: true

      - name: Push Helm chart to GCS bucket
        run: >
          gsutil cp gifs-website-${{ env.NEW_VERSION }}.tgz gs://gifs-website-charts;
        
   
      - name: Deploy/Upgrade to Testing Env GCP Cluster
        run: >
          helm upgrade --install gifs-website ${{ env.NEW_VERSION }} . -f values.yml;
        working-directory: charts-test

      - name: Run Modified ConfigMap
        run: >
          sleep 60;
          python3  updateConfig.py;
          kubectl apply -f config.yml;
        working-directory: k8s-test
        
  Test-Testing-Cluster:
    name: Testing-Cluster
    needs: [GKE-Setup-Testing-Cluster]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: "gifs-website-cluster-test"
      GKE_REGION: "europe-west1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup GCloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-test"
            location: "europe-west1"

      - name: Config Test Script
        run: >
          bash ingressIP-test.sh;      
        working-directory: tests   

      - name: Test-Testing-Cluster
        run: >
          bash test.sh;
        working-directory: tests

      - name: Test-Testing-Cluster
        run: >
          kubectl delete deploy --all;
          kubectl delete svc --all;
          echo Testing Test-Server Stage Completed;
          exit 1;
        
       
  GKE-Setup-Production-Cluster:
    name: Setup the GKE-Prod-Cluster
    needs: [Test-Testing-Cluster]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: "gifs-website-cluster-prod"
      GKE_REGION: "us-central1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup GCloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-prod"
            location: "us-central1"

      - name: Install Dependencies
        run: >
          sudo apt install jq -y;
          sudo pip3 install docker;
        working-directory: charts-prod 

      - name: Set environment variables
        run: echo "RDS_CREDS=${{ secrets.RDS_CREDS }}" >> $GITHUB_ENV

      - name: Run Python script
        run: python3 rds.py;
        working-directory: charts-prod

      - name: Run changeValues.sh
        run: >
          chmod +x changeTag.py;
          python3 changeTag.py danielpinhas/flask-k8s; 
          python3 changeTag.py danielpinhas/flask2-k8s;
          python3 changeTag.py danielpinhas/flask3-k8s;
        working-directory: charts-prod
      
      - name: Package Helm chart
        run: helm package charts-prod --app-version gifs-website-prod --destination .;
      
      - name: Deploy/Upgrade to Testing Env GCP Cluster
        run: helm upgrade --install gifs-website-prod . -f values.yml;
        working-directory: charts-prod

      - name: Run Modified ConfigMap
        run: >
          sleep 60;
          python3  updateConfig.py;
          kubectl apply -f config.yml;
        working-directory: k8s-prod

  Test-Production-Server:
    name: Testing Prod-Server
    needs: [GKE-Setup-Production-Cluster]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: "gifs-website-cluster-prod"
      GKE_REGION: "us-central1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup GCloud CLI
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIAL }}
      - name: Retrieve cluster info for use with kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
            cluster_name: "gifs-website-cluster-prod"
            location: "us-central1"
      - name: Config Test Script
        run: >
          bash ingressIP-prod.sh;      
        working-directory: tests 

      - name: Test Production Server
        run: >
          bash prod.sh;
          echo 'Testing Prod-Server Stage Completed';
        working-directory: tests