name: Gifs-Website

on:
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  your_job_name:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Generate cred.json
      uses: frdrwrt/write-to-file@v1.3
      with:
        filepath: Gifs-Website/Terraform-Autopilot/cred.json
        content: ${{secrets.GCP_CREDENTIAL}}
        mode: 744

    - name: Dependncies
      run: >
        pip3 install docker

    - name: Updating Changes
      run: >
        cd ~ && sudo rm -rf Gifs-Website || true;  
        cd ~ && git clone https://github.com/Daniel-Pinhas/Gifs-Website.git;


    - name: Build and Push Flask-1 Image
      run: >
        cd ~/Gifs-Website/App/Flask-Project && python3 manageVersion.py;
        echo 'Build and Push Flask-1 Image Stage Completed';

    - name: Build and Push Flask-2 Image
      run: >
        cd ~/Gifs-Website/App/Flask-Project2 && python3 manageVersion.py;
        echo 'Build and Push Flask-2 Image Stage Completed';

    - name: Build and Push Flask-3 Image
      run: >
        cd ~/Gifs-Website/App/Flask-Project3 && python3 manageVersion.py;
        echo 'Build and Push Flask-3 Image Stage Completed';

    - name: Deploy to Testing Env GCP Cluster
      run: > 
        kubectl config set-context gke_lofty-dynamics-393510_us-central1_gifs-website-test;
        cd Gifs-Website/charts-prod && bash changeTagflask.sh
        kubectl apply -f service-html.yml;
        kubectl apply -f flask-prod.yml;
        sleep 60;
        cd Gifs-Website/charts-prod && bash updateHTML.sh;
        kubectl apply -f httpd-deploy-prod.yml;
        echo 'Deploy Application into Rancher Desktop Completed';

    - name: Testing Test-Server
      run: >
        cd Gifs-Website/tests && bash ingressIP.sh;
        cd Gifs-Website/tests && bash test.sh;
        echo Testing Test-Server Stage Completed;

    - name: Deploy to Production Env GCP Cluster
      run: >
        kubectl config set-context gke_lofty-dynamics-393510_us-central1_gifs-website-prod;
        cd Gifs-Website/charts-prod && bash changeTagflask.sh
        cd Gifs-Website/charts-prod && kubectl apply -f service-html.yml;
        cd Gifs-Website/charts-prod && kubectl apply -f flask-prod.yml;
        sleep 60;
        cd Gifs-Website/charts-prod && bash updateHTML.sh;
        kubectl apply -f httpd-deploy-prod.yml;
        echo 'Deploy Application into Production GCP Cluster Completed';

    - name: Testing Prod-Server
      run: >
        cd Gifs-Website/tests && bash ingressIP.sh;
        cd Gifs-Website/tests && bash prod.sh;
        echo 'Testing Prod-Server Stage Completed';