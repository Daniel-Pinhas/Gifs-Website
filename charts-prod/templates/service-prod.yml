apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-ingress
  labels:
spec:
  rules:
    - http:
        paths:
          - path: /flask-1
            pathType: Prefix
            backend:
              service:
                name: flask-service-1
                port:
                  number: 80
          - path: /flask-2
            pathType: Prefix
            backend:
              service:
                name: flask-service-2
                port:
                  number: 80
          - path: /flask-3
            pathType: Prefix
            backend:
              service:
                name: flask-service-3
                port:
                  number: 80

apiVersion: v1
kind: Service
metadata:
  name: flask-service-1
spec:
  type: LoadBalancer
  selector:
    app: flask-1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000


---
apiVersion: v1
kind: Service
metadata:
  name: flask-service-2
spec:
  type: LoadBalancer
  selector:
    app: flask-2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000


---
apiVersion: v1
kind: Service
metadata:
  name: flask-service-3
spec:
  type: LoadBalancer
  selector:
    app: flask-3
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: prod-httpd-service
spec:
  type: LoadBalancer
  selector:
    app: httpd
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nasa-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nasa-app
  template:
    metadata:
      labels:
        app: nasa-app
    spec:
      containers:
        - name: nasa
          image: razdahan31/gha-pipeline:latest
          ports:
            - containerPort: 5000

---
apiVersion: v1
kind: Service
metadata:
  name: nasa-service
spec:
  selector:
    app: nasa-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer