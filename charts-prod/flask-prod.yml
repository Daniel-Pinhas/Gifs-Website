apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment-1
  labels:
    app: flask
spec: 
  replicas: 2
  selector:
    matchLabels:
      app: flask-1
  template:
    metadata:
      labels:
        app: flask-1
    spec:
      containers:
        - name: flask1
          image: danielpinhas/flask-k8s:1.1
          ports:
            - containerPort: 5000
          env:
            - name: USER_NAME
              value: daniel2
            - name: USER_PWD
              value: daniel2
            - name: DB_URL
              value: "rds-gifs-db.cih3afqd7fge.us-east-2.rds.amazonaws.com"


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment-2
  labels:
    app: flask
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-2
  template:
    metadata:
      labels:
        app: flask-2
    spec:
      containers:
        - name: flask2
          image: danielpinhas/flask2-k8s:latest
          ports:
            - containerPort: 5000
          env:
            - name: USER_NAME
              value: daniel2
            - name: USER_PWD
              value: daniel2
            - name: DB_URL
              value: "rds-gifs-db.cih3afqd7fge.us-east-2.rds.amazonaws.com"


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment-3
  labels:
    app: flask
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-3
  template:
    metadata:
      labels:
        app: flask-3
    spec:
      containers:
        - name: flask3
          image: danielpinhas/flask3-k8s:latest
          ports:
            - containerPort: 5000
          env:
            - name: USER_NAME
              value: daniel2
            - name: USER_PWD
              value: daniel2
            - name: DB_URL
              value: "rds-gifs-db.cih3afqd7fge.us-east-2.rds.amazonaws.com"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-ingress
spec:
  rules:
    - http:
        paths:
          - path: /flask1
            pathType: Prefix
            backend:
              service:
                name: flask-service-1
                port:
                  number: 5000
          - path: /flask2
            pathType: Prefix
            backend:
              service:
                name: flask-service-2
                port:
                  number: 5000
          - path: /flask3
            pathType: Prefix
            backend:
              service:
                name: flask-service-3
                port:
                  number: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service-1
spec:
  type: LoadBalancer
  selector:
    app: flask-1
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000


---
apiVersion: v1
kind: Service
metadata:
  name: flask-service-2
spec:
  type: LoadBalancer
  selector:
    app: flask-2
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service-3
spec:
  type: LoadBalancer
  selector:
    app: flask-3
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
